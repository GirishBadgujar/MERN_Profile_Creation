{"ast":null,"code":"var _jsxFileName = \"D:\\\\Login_App\\\\login_app\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport avatar from '../assets/profile.png';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { registerValidation } from '../helper/validate';\nimport convertToBase64 from '../helper/convert';\nimport { registerUser } from '../helper/helper';\nimport styles from '../styles/Username.module.css';\n\n// Function to send email OTP\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sendEmailOTP = async email => {\n  // Here you can integrate with your email service provider\n  // to send an OTP to the provided email address\n  // Example: You can use a third-party service like SendGrid\n  // and call their API to send the OTP via email\n};\nexport default function Register() {\n  _s();\n  const navigate = useNavigate();\n  const [file, setFile] = useState();\n  const formik = useFormik({\n    initialValues: {\n      email: ''\n    },\n    validate: registerValidation,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: async values => {\n      // Send email OTP\n      try {\n        await sendEmailOTP(values.email);\n        toast.success('Email OTP sent successfully!');\n      } catch (error) {\n        toast.error('Failed to send email OTP.');\n      }\n    }\n  });\n\n  /** Formik doesn't support file upload so we need to create this handler */\n  const onUpload = async e => {\n    const base64 = await convertToBase64(e.target.files[0]);\n    setFile(base64);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.glass,\n        style: {\n          width: '40%',\n          paddingTop: '3em'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"py-1\",\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile flex justify-center py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"profile\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: file || avatar,\n                className: styles.profile_img,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: onUpload,\n              type: \"file\",\n              id: \"profile\",\n              name: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox flex flex-col items-center gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('email'),\n              className: styles.textbox1,\n              type: \"text\",\n              placeholder: \"Email*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btn,\n              type: \"submit\",\n              children: \"Request reset link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-4\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"text-gray-500\",\n                to: \"/\",\n                children: \"Back to log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"fXRmQ7cBu0kE0tGHiWpsril5WhI=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","avatar","toast","Toaster","useFormik","registerValidation","convertToBase64","registerUser","styles","jsxDEV","_jsxDEV","sendEmailOTP","email","Register","_s","navigate","file","setFile","formik","initialValues","validate","validateOnBlur","validateOnChange","onSubmit","values","success","error","onUpload","e","base64","target","files","className","children","position","reverseOrder","fileName","_jsxFileName","lineNumber","columnNumber","glass","style","width","paddingTop","handleSubmit","htmlFor","src","profile_img","alt","onChange","type","id","name","getFieldProps","textbox1","placeholder","btn","to","_c","$RefreshReg$"],"sources":["D:/Login_App/login_app/client/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport avatar from '../assets/profile.png';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useFormik } from 'formik';\r\nimport { registerValidation } from '../helper/validate';\r\nimport convertToBase64 from '../helper/convert';\r\nimport { registerUser } from '../helper/helper';\r\nimport styles from '../styles/Username.module.css';\r\n\r\n// Function to send email OTP\r\nconst sendEmailOTP = async (email) => {\r\n  // Here you can integrate with your email service provider\r\n  // to send an OTP to the provided email address\r\n  // Example: You can use a third-party service like SendGrid\r\n  // and call their API to send the OTP via email\r\n};\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    validate: registerValidation,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: async (values) => {\r\n      // Send email OTP\r\n      try {\r\n        await sendEmailOTP(values.email);\r\n        toast.success('Email OTP sent successfully!');\r\n      } catch (error) {\r\n        toast.error('Failed to send email OTP.');\r\n      }\r\n    },\r\n  });\r\n\r\n  /** Formik doesn't support file upload so we need to create this handler */\r\n  const onUpload = async (e) => {\r\n    const base64 = await convertToBase64(e.target.files[0]);\r\n    setFile(base64);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <Toaster position=\"top-center\" reverseOrder={false}></Toaster>\r\n\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className={styles.glass} style={{ width: '40%', paddingTop: '3em' }}>\r\n          <form className=\"py-1\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"profile flex justify-center py-4\">\r\n              <label htmlFor=\"profile\">\r\n                <img src={file || avatar} className={styles.profile_img} alt=\"avatar\" />\r\n              </label>\r\n              <input onChange={onUpload} type=\"file\" id=\"profile\" name=\"profile\" />\r\n            </div>\r\n            <div className=\"textbox flex flex-col items-center gap-6\">\r\n              <input\r\n                {...formik.getFieldProps('email')}\r\n                className={styles.textbox1}\r\n                type=\"text\"\r\n                placeholder=\"Email*\"\r\n              />\r\n              <button className={styles.btn} type=\"submit\">\r\n                Request reset link\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"text-center py-4\">\r\n              <span>\r\n                <Link className=\"text-gray-500\" to=\"/\">\r\n                  Back to log in\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}